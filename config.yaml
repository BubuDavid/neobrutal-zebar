global:
  enable_devtools: true

window/bar:
  providers: ["self"]
  width: "{{ self.args.MONITOR_WIDTH }}"
  height: "275"
  position_x: "{{ self.args.MONITOR_X }}"
  position_y: "{{ self.args.MONITOR_Y }}"
  z_order: "normal"
  resizable: false
  global_styles: |
    @import "https://www.nerdfonts.com/assets/css/webfont.css";
    @import "https://cdn.jsdelivr.net/npm/@tabler/icons-webfont@latest/dist/tabler-icons.min.css";
    @import "http://asset.localhost/C%3A%2FUsers%2Fdavid%2F.glzr%5Czebar%5Cstyles%5Cglobal.css";

  group/left:
    template/menu:
      events:
        - type: "click"
          fn_path: "scripts/menu.js#toggleDropdown"
          selector: ".dropdown-button"
      template: |
        <div class="dropdown-button">
          <i class="ti ti-brand-github-filled"></i>
        </div>

    template/dropdown:
      events:
        - type: "click"
          fn_path: "scripts/menu.js#powerDown"
          selector: "#powerdown"
        - type: "click"
          fn_path: "scripts/menu.js#sleep"
          selector: "#sleep"
        - type: "click"
          fn_path: "scripts/menu.js#logout"
          selector: "#logout"
      template: 
        <a id="powerdown" href="#">
          <i class="ti ti-power"></i>
        </a>
        <a id="sleep" href="#">
          <i class="ti ti-zzz"></i>
        </a>
        <a id="logout" href="#">
          <i class="ti ti-logout"></i>
        </a>

    template/memory:
      providers: ["memory"]
      template: |
        <i class="ti ti-ruler-2"></i>
        <span class="label">
          {{ Math.round(memory.usage) }}%
        </span>
        <span class="meter">
          <span style="width: {{Math.round(memory.usage) }}%"</span>
        </span>

    template/cpu:
      providers: ["cpu"]
      template: |
        <div class={{cpu.usage > 85 ? "high-usage" : ""}}>
          <i class="ti ti-cpu"></i>
          <span class="label">
            {{ Math.round(cpu.usage) }}%
          </span>
          <span class="meter">
            <span style="width: {{Math.round(cpu.usage) }}%"</span>
          </span>
        </div>


  group/center:
    template/glazewm_workspaces:
      providers: ["glazewm"]
      events:
        - type: "click"
          fn_path: "scripts/glazewm.js#focusWorkspace"
          selector: ".workspace"
      template: |
        @for (workspace of glazewm.currentWorkspaces) {
          <button 
            class="workspace {{ workspace.hasFocus ? 'focused' : '' }} {{ workspace.isDisplayed ? 'displayed' : '' }}"
            id="{{ workspace.name }}"
          >
            <i class="
              ti {{ workspace.hasFocus ? 'ti-point-filled' : workspace.isDisplayed ? 'ti-circle' : 'ti-point' }}
            "></i>
          </button>
        }
        <i id="tiling-direction" class="ti ti-switch-{{glazewm.tilingDirection}}"></i>
        <div id="process-container">
          @for (child of glazewm.focusedWorkspace.children) {
            @if (child.state !== null) {
              <span class="process {{ child.hasFocus && "current"}}">
                <i class="ti" data-title="{{ child.title.toLowerCase() }}" data-process-name="{{ child.processName.toLowerCase() }}"></i>
              </span> 
            }
          }
        </div>

  group/right:
    template/now-playing:
      providers: ["glazewm"]
      template: |
        @for (workspace of glazewm.allWorkspaces) {
          @for (child of workspace.children) {
            @if (child?.processName === "chrome" && child?.title.includes("YouTube Music")) {
              @if (child?.title === "YouTube Music") {
                <i class="ti ti-music-off"></i>
                  Nothing Playing
              } @else {
                @if (child?.title.includes("YouTube Music - ")) {
                  <i class="ti ti-music playing"></i>
                  <span class={{child.title.length > 30 ? "move" : ""}}>
                  {{ child.title.split(" - ").slice(0, 2).join(" - ") }}
                  </span>
                }
              }
            }
          }
        }

    template/separator1:
      template: |
        <i class="ti ti-line separators"></>

    template/pause:
      providers: ["glazewm"]
      template: |
        @if (glazewm.bindingModes[0]?.name === 'pause') {
          <i class="ti ti-parking-circle-filled"></i>
        }
        @else {
          <i class="ti ti-parking-circle"></i>
        }

    template/weather:
      providers: ["weather"]
      template: |
        @switch (weather.status) {
          @case ('clear_day') {<i class="nf nf-weather-day_sunny"></i>}
          @case ('clear_night') {<i class="nf nf-weather-night_clear"></i>}
          @case ('cloudy_day') {<i class="nf nf-weather-day_cloudy"></i>}
          @case ('cloudy_night') {<i class="nf nf-weather-night_alt_cloudy"></i>}
          @case ('light_rain_day') {<i class="nf nf-weather-day_sprinkle"></i>}
          @case ('light_rain_night') {<i class="nf nf-weather-night_alt_sprinkle"></i>}
          @case ('heavy_rain_day') {<i class="nf nf-weather-day_rain"></i>}
          @case ('heavy_rain_night') {<i class="nf nf-weather-night_alt_rain"></i>}
          @case ('snow_day') {<i class="nf nf-weather-day_snow"></i>}
          @case ('snow_night') {<i class="nf nf-weather-night_alt_snow"></i>}
          @case ('thunder_day') {<i class="nf nf-weather-day_lightning"></i>}
          @case ('thunder_night') {<i class="nf nf-weather-night_alt_lightning"></i>}
        }


    template/separator:
      template: |
        <i class="ti ti-line separators"></>

    template/clock:
      providers: ["date"]
      template: |
        {{ date.toFormat(date.now, 'LLL dd t') }}


